4)
#! /usr/bin/env python3

def powI(pow, base)
    acc = 1
    for p in range(pow)
        acc = acc * base
    return acc

def powF(pow, base)
    if pow == 0
        return 1;

    return base * powF(pow-1, base)
5) 
Q: Name three languages in each of the following categories: von Neumann, functional, object oriented.  Name two logic languages. Name two widely used concurrent languages.
   
A:	von Neumann: C, C++, Java
	Functional: Lisp, haskell, Prolog 
	Object oriented: Java, C++, Objective C
	Two Logic Languages: Prolog, SQL
	Two Widely Concurrent Languages: Java,Erlang 
6) 
Q: What kind of behavior in C is said to be undefined? 
   
A:	There are several behaviors such as dividing by zero, out of bounds array accessing or 	non initialized variables. Sometimes it will compile but you will get unpredicted results.
7)
Q: What is the difference between undefined behavior vs unspecified behavior in C++? 
  
A: Undefined behavior refers to when some sort of 	implementation MAY behave in a way you cannot predict upon reaching a certain state.
Unspecified behavior is a consistent behavior that the programmer left out intentionally in some sort of implementation

8)Q: Errors in a computer program can be classified according to when they are detected and, if they are detected at compile time, what part of the compiler detects them. Using your favorite imperative language, give an example of each of the following.
A: Lets choose java for this question
a)	Lexical error would be something like
a.	String 2name = “Kevin, Andrade”; strings with a number are not allowed
b)	Syntax error would be 
a.	String temp = hello”; no open quotes.
c)	Static semantic error would be 
a.	Int a = 2.3 // this isn’t a float. 
d)	Dynamic semantic error
a.	Int arr[100] = new int [100];
arr[100] = 7; //this will be out of bounds (index 0 – 99)
e)	something like
a.	int x;
cin>> x; //lets assume x is a number
x = x * x  //this can cause in an overflow! If too big.
Cout << x ; //undesired results potentially


9) the limit is 2147483647 once it overflows it goes to -2147483648. In java this is the same and in python there is no longer a “limit: to the value of integers. In Haskell this is the same. Most languages use 32 bit integers and size isn’t an issue. Portability should be okay for now since there seems to be a common ground for integer size. 
10) 
Q: Operator precedence and associativity.........
   
 A:	a) w + x ^ y ^ z -> +w^^xyz
	b) w + x + y ^ z ->  ++wx^yz
	c) w * x * y ^ z -> **wx^yz
	d) w + x - y + z -> -+wx+yz
11)	a) wxyz^^*
	b) wx+yz^+
	c) wx*yz^*
	d)wx+y-z+
12) 
Q: True or False. Some programming languages are more "powerful" then others.  Explain your answer.
   
 A: In my opinion this is false. Powerful is a very broad term and there is no BEST language. If that was the case, then there wouldn't be a need for all of these languages. Instead, there are multiple languages that are designed for 	a set of specific purposes. For example, someone wouldn't use JavaScript to make every video game in existence or code the entire internet with. Each language has its unique properties and are made for different purposes.

13) 
Q: What is the difference between syntax and semantics?

A:  Syntax is the way a program is structured. Its the rules of the language and what tokens are permitted, and which are not. Detected at compile time
Semantics is the way that the program and the computational model are related. For example, int x = Kevin is incorrect since semantic errors are detected at run time and Kevin does not represent an integer form.  
how
