package project;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class FullAssembler implements Assembler{

	@Override
	public int assemble(String inputFileName, String outputFileName, StringBuilder error) {
		ArrayList<String> strings = null;
		
		try (Stream<String> lines = Files.lines(Paths.get(inputFileName))) {
			strings = (ArrayList<String>) lines.collect(Collectors.toList());
		
		
		} catch(IOException e){
			
		}
		
		try(Stream<String> second = strings.stream()){
			
			second
			.filter(v -> v.trim().length() >0)
			.collect(Collectors.toList());
			System.out.println(second.toString());

		}
		
		return 0;
	}

	public static void main(String[] args) {
		StringBuilder error = new StringBuilder();
		System.out.println("Enter the name of the file without extension: ");
		try (Scanner keyboard = new Scanner(System.in)) { 
			String filename = keyboard.nextLine();
			int i = new FullAssembler().assemble(filename + ".pasm", 
					filename + ".pexe", error);
			System.out.println("result = " + i);
		}
	}

	
	
	
	
}
